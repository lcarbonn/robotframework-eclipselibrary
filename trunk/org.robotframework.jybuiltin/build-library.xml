<project name="JUnitLibrary" default="dist" basedir=".">
    <description>
        build file for RobotFramework JUnit Library
    </description>
  <!-- get version property -->
  <property file="conf.properties"/>
  <!-- set global properties for this build -->
  <property name="library" value="JyBuiltInLibrary"/>
  <property name="src" location="src/java"/>
  <property name="build" location="build/javabuild"/>
  <property name="dist"  location="dist"/>
  <property name="lib-ext"  location="lib-ext"/>
  <property name="doc"  value="documentation"/>
  <property name="jython"  location="C:/RobotFramework/jython2.5.1/jython.bat"/>
  <property name="pythonpath"  location="C:/RobotFramework/Python26/Lib/site-packages"/>
  <property name="libdoc"  location="${pythonpath}/libdoc.py"/>
  <property name="javalibcore"  value="javalib-core-0.8.1-jar-with-dependencies.jar"/>
  <property name="jythonjar"  value="jython.jar"/>
  <property name="jarfile"  value="jybuiltinlibrary-${version}.jar"/>
  <property name="jarfilewithdep"  value="jybuiltinlibrary-${version}-with-dependencies.jar"/>
  <property name="jybuitlinjar"  value="jybuiltin-${version}.jar"/>

  
  <property name="classpath"  location="C:/outils/jdk1.5.0_12/lib/tools.jar;${dist}/${jarfilewithdep}"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}"
      source="1.5"
      target="1.5"
      classpath="${lib-ext}/${javalibcore};${lib-ext}/${jythonjar};${dist}/${jybuitlinjar}"
      includeAntRuntime="false"
      debug="on"
    />
  </target>

  <target name="createjar" depends="compile"
        description="generate the simple jar distribution" >
    <delete file="${dist}/${jarfile}"/>

    <jar jarfile="${dist}/${jarfile}"
       basedir="."
       includes="log4j.properties, conf.properties">

    <fileset dir="${build}"/>
    <fileset dir="${src}"/>

    <manifest>
      <!-- Who is building this jar? -->
      <attribute name="Built-By" value="Laurent Carbonnaux"/>
      <attribute name="Main-Class" value="${library}"/>
      <!-- Information about the program itself -->
      <attribute name="Implementation-Vendor" value="ScrumVision.org"/>
      <attribute name="Implementation-Title" value="${library}"/>
      <attribute name="Implementation-Version" value="${version}"/>
    </manifest>
    
    </jar>
  </target>

  <target name="createjardep" depends="compile"
        description="generate jar with dependencies" >
  	<delete file="${dist}/${jarfilewithdep}"/>
  	
    <jar jarfile="${dist}/${jarfilewithdep}"
       basedir="."
    	includes="log4j.properties, conf.properties">

    <fileset dir="${build}"/>
    <fileset dir="${src}"/>
    <zipfileset includes="**/*" src="${lib-ext}/${javalibcore}"/>
    <zipfileset includes="**/*" src="${lib-ext}/${jythonjar}"/>

    <manifest>
      <!-- Who is building this jar? -->
      <attribute name="Built-By" value="Laurent Carbonnaux"/>
      <attribute name="Main-Class" value="${library}"/>
      <!-- Information about the program itself -->
      <attribute name="Implementation-Vendor" value="ScrumVision.org"/>
      <attribute name="Implementation-Title" value="${library}"/>
      <attribute name="Implementation-Version" value="${version}"/>
    </manifest>
    
    </jar>

  </target>

  <target name="dist" depends="createjar, createjardep"
            description="generate the distributions">
  </target>

  <target name="gendochtml"
        description="Keyword documentation generation">
    <mkdir dir="${doc}"/>
    <delete file="${doc}/${library}.html"/>

    <!-- Gen the HTML keyword documentation -->
    <exec executable="${jython}" dir=".">
      <env key="CLASSPATH" path="C:\outils\jdk1.5.0_12\lib\tools.jar;${dist}/${jarfilewithdep}"/>
      <env key="PYTHONPATH" path="${pythonpath}"/>
      <arg value="-Dpython.path=${pythonpath}"/>
      <arg value="${libdoc}"/>
      <arg value="-o"/>
      <arg path="${doc}/${library}.html"/>
      <arg value="org.lcx.robotframework.junit.${library}"/>
    </exec>

    </target>

  <target name="gendocxml"
        description="Keyword documentation generation">
    <mkdir dir="${doc}"/>
    <delete file="${doc}/${library}.xml"/>

    <!-- Gen the XML keyword file -->
    <exec executable="${jython}" dir=".">
      <env key="CLASSPATH" path="C:\outils\jdk1.5.0_12\lib\tools.jar;${dist}/${jarfilewithdep}"/>
      <env key="PYTHONPATH" path="${pythonpath}"/>
      <arg value="-Dpython.path=${pythonpath}"/>
      <arg value="${libdoc}"/>
      <arg value="-o"/>
      <arg path="${doc}/${library}.xml"/>
      <arg value="org.lcx.robotframework.junit.${library}"/>
    </exec>

    </target>
    
  <target name="gendoc" depends="gendocxml, gendochtml"
        description="Keyword documentations generation">
  </target>
  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
  
</project>

