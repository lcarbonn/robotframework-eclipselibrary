#summary This page explains how to use robotframework ant task.
#labels Featured

<wiki:toc max_depth="2" />

= Introduction =
`RobotAnt` is a [http://ant.apache.org/ ant] task for using robotframework inside ant build scripts.

`RobotAnt` ant task inherits from the core [http://ant.apache.org/manual/Tasks/jar.html java] task.

`RobotAnt` uses the same parameters and propose the following ones

= Task Definition =
Ant task definition for `RobotAnt`task :

{{{
<taskdef name="robotframework"
   classname="org.lcx.robotframework.ant.RobotAnt"
   classpath="ant-robotframework-<version>.jar"/>

}}}

= Fork or unfork modes =
`RobotAnt` use the jar standelone launcher for robotframework (actual v2.5.4.1)

robotframework-2.5.4.1.jar must be at root folder of the ant basedir.

|| *mode* || *comment* || *default* ||
|| fork || tests are run in another VM than Ant || X||
|| unfork || tests are run inside ant VM ||  ||

== Fork mode ==
By default it uses the -jar option in fork mode (external VM)
{{{
<robotframework data_sources="Test.html">
  <arg line="--help"/>
  <bootclasspath>
   <pathelement location="lib/selenium-server.jar"/>
  </bootclasspath>
</robotframework>
}}}

This will do the same as :
{{{java -Xbootclasspath lib/selenium-server.jar -jar robotframework-2.5.4.1.jar --help Test.html}}}

== Unfork mode ==
If fork is set to false, then class mode will be used
{{{
<robotframework data_sources="Test.html" fork="false">
  <arg line="--help"/>
  <classpath>
   <pathelement location="lib/selenium-server.jar"/>
  </classpath>
</robotframework>
}}}
This will do the same as :

{{{java -classpath lib/selenium-server.jar:robotframework-2.5.4.1.jar org.robotframework.RobotFramework --help Test.html}}}

== Specific a specific jar ==
As per java task, you can specify the jar RobotAnt task should use to replace default ones.
Use "jar" task attribute
{{{
<robotframework data_sources="Test.html" jar="path/myrobotjar.jar">
  <arg line="--help"/>
  <bootclasspath>
   <pathelement location="lib/selenium-server.jar"/>
  </bootclasspath>
</robotframework>
}}}

also you could change in robotant.properties file inside `RobotAnt` jar file

= Parameters =
`RobotAnt` propose some Robotframework [http://robotframework.googlecode.com/svn/tags/robotframework-2.5.4/doc/userguide/RobotFrameworkUserGuide.html#configuring-execution options] to be set as task attributes:

|| *Attribute* || *Description* || *Required* ||
|| name || set the --name option || No ||
|| suite || set the --suite option || No ||
|| test || set the --test option || No ||
|| variablefile || set the --variablefile option || No ||
|| outputdir || set the --outputdir option || No ||
|| loglevel || set the --loglevel option || No ||
|| debugfile || set the --debugfile option || No ||

Complete sample:
{{{
<robotframework 
    jar="robotframework-selenium-2.5.4.1.jar"
    data_sources="TestSelenium.html"
    name="TestExecution Result"
    loglevel="TRACE"
    debugfile="jybot.log"
    outputdir="resultats"
    suite="TestSelenium"
    test="'Test search on google'"
    variablefile="path/vars.py"
    >
  <bootclasspath>
   <pathelement location="lib/selenium-server.jar"/>
  </bootclasspath>
  <arg line="--variable str:Hello"/>
</robotframework>

}}}

Other Robotframework options can be set using *arg with line* attribute:
{{{
   <arg line="--help"/>
   <arg line="--variable str:Hello"/>
}}}